{
  "Name": "k8s/nginx-ingress",
  "Version": "1.12.1-1",
  "DisplayName": "Nginx Ingress",
  "Description": "Nginx WebServer with Ingress Controller.",
  "Logo": "https://cloudogu.com/images/dogus/nginx.png",
  "Category": "Base",
  "Tags": [
    "webserver",
    "proxy",
    "reverse-proxy",
    "k8s"
  ],
  "Url": "https://kubernetes.github.io/ingress-nginx/",
  "Image": "registry.cloudogu.com/k8s/nginx-ingress",
  "Dependencies": [
    {
      "type": "client",
      "name": "k8s-dogu-operator",
      "version": ">=0.16.0"
    },
    {
      "type": "client",
      "name": "cesapp",
      "version": "<0.0.0"
    },
    {
      "type": "client",
      "name": "ces-setup",
      "version": "<0.0.0"
    }
  ],
  "ServiceAccounts": [
    {
      "Type": "k8s-dogu-operator",
      "Kind": "k8s"
    }
  ],
  "Configuration": [
    {
      "Name": "logging/root",
      "Description": "Set the root log level to one of ERROR, WARN, INFO, DEBUG.",
      "Optional": true,
      "Default": "WARN",
      "Validation": {
        "Type": "ONE_OF",
        "Values": [
          "WARN",
          "DEBUG",
          "INFO",
          "ERROR"
        ]
      }
    },
    {
      "Name": "disable_access_log",
      "Description": "Disable logging of incoming requests",
      "Optional": true
    },
    {
      "Name": "google_tracking_id",
      "Description": "Google Analytics Tracking ID",
      "Optional": true
    },
    {
      "Name": "container_config/memory_limit",
      "Description": "Limits the container's memory usage. Use a positive integer value followed by one of these units [b,k,m,g] (byte, kibibyte, mebibyte, gibibyte).",
      "Optional": true,
      "Validation": {
        "Type": "BINARY_MEASUREMENT"
      }
    },
    {
      "Name": "container_config/memory_request",
      "Description": "Requests the container's minimal memory requirement. Use a positive integer value followed by one of these units [b,k,m,g] (byte, kibibyte, mebibyte, gibibyte).",
      "Optional": true,
      "Validation": {
        "Type": "BINARY_MEASUREMENT"
      },
      "Default": "100m"
    },
    {
      "Name": "container_config/swap_limit",
      "Description": "Limits the container's swap memory usage. Use zero or a positive integer value followed by one of these units [b,k,m,g] (byte, kibibyte, mebibyte, gibibyte). 0 will disable swapping.",
      "Optional": true,
      "Validation": {
        "Type": "BINARY_MEASUREMENT"
      }
    },
    {
      "Name": "container_config/cpu_core_limit",
      "Description": "Limits the container's CPU core usage. Use a positive floating value describing a fraction of 1 CPU core. When you define a value of '0.5', you are requesting half as much CPU time compared to if you asked for '1.0' CPU.",
      "Optional": true
    },
    {
      "Name": "container_config/cpu_core_request",
      "Description": "Requests the container's minimal CPU core requirement. Use a positive floating value describing a fraction of 1 CPU core. When you define a value of '0.5', you are requesting half as much CPU time compared to if you asked for '1.0' CPU.",
      "Optional": true,
      "Default": "0.25"
    },
    {
      "Name": "container_config/storage_limit",
      "Description": "Limits the container's ephemeral storage usage. Use a positive integer value followed by one of these units [b,k,m,g] (byte, kibibyte, mebibyte, gibibyte).",
      "Optional": true,
      "Validation": {
        "Type": "BINARY_MEASUREMENT"
      }
    },
    {
      "Name": "container_config/storage_request",
      "Description": "Requests the container's minimal ephemeral storage requirement. Use a positive integer value followed by one of these units [b,k,m,g] (byte, kibibyte, mebibyte, gibibyte).",
      "Optional": true,
      "Validation": {
        "Type": "BINARY_MEASUREMENT"
      }
    }
  ],
  "ExposedPorts": [
    {
      "Type": "tcp",
      "Host": 80,
      "Container": 80
    },
    {
      "Type": "tcp",
      "Host": 443,
      "Container": 443
    }
  ],
  "HealthChecks": [
    {
      "Type": "tcp",
      "Port": 80
    },
    {
      "Type": "tcp",
      "Port": 443
    }
  ],
  "Properties": {
    "stopAtBackup": "false"
  }
}
