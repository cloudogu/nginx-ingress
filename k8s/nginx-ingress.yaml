apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    dogu: nginx-ingress
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/part-of: nginx-ingress
  name: nginx-ingress
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    dogu: nginx-ingress
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/part-of: nginx-ingress
  name: nginx-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress
subjects:
  - kind: ServiceAccount
    name: nginx-ingress
    namespace: '{{ .Namespace }}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    dogu: nginx-ingress
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/part-of: nginx-ingress
    app.kubernetes.io/component: controller
  name: nginx-ingress
# k√∂nnen wir die folgenden Regeln als ServiceAccount in der dogu.json abbilden?
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - endpoints
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - ingress-controller-leader
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - create
      - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    dogu: nginx-ingress
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/part-of: nginx-ingress
    app.kubernetes.io/component: controller
  name: nginx-ingress
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    dogu: nginx-ingress
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/part-of: nginx-ingress
    app.kubernetes.io/component: controller
  name: nginx-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress
subjects:
  - kind: ServiceAccount
    name: nginx-ingress